{
  "name": "truthforge",
  "version": "1.0.0",
  "description": "AI Development Validation Framework - Preventing False Consensus Catastrophic Failures",
  "main": "src/cli/run-validation.js",
  "bin": {
    "truthforge": "src/cli/run-validation.js",
    "tf-validate": "src/cli/run-validation.js"
  },
  "scripts": {
    "start": "node src/cli/run-validation.js",
    "validate": "node src/cli/run-validation.js",
    "validate:comprehensive": "node src/cli/run-validation.js --comprehensive",
    "validate:tests": "node src/cli/run-validation.js --run-tests",
    "test": "jest",
    "test:unit": "jest tests/unit --coverage",
    "test:integration": "jest tests/integration",
    "test:e2e": "jest tests/e2e",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:ci": "jest --coverage --ci --watchAll=false",
    "monitor": "node src/core/validator.js",
    "lint": "eslint src/ tests/ --ext .js,.ts",
    "lint:fix": "eslint src/ tests/ --ext .js,.ts --fix",
    "format": "prettier --write \"src/**/*.{js,ts,json,md}\" \"tests/**/*.{js,ts,json,md}\" \"docs/**/*.md\"",
    "format:check": "prettier --check \"src/**/*.{js,ts,json,md}\" \"tests/**/*.{js,ts,json,md}\"",
    "build": "echo 'No build step required for Node.js project'",
    "dev": "nodemon src/cli/run-validation.js --watch src/",
    "clean": "rm -rf validation/screenshots/* validation/security/* .truthforge/* coverage/",
    "install:hooks": "bash scripts/install.sh",
    "checkpoint": "bash scripts/checkpoint.sh",
    "rollback": "bash scripts/rollback.sh",
    "emergency": "bash scripts/emergency-stop.sh",
    "ci": "npm run lint && npm run test:ci && npm run validate:comprehensive",
    "prepublishOnly": "npm run ci",
    "postinstall": "npm run install:hooks"
  },
  "keywords": [
    "ai",
    "validation",
    "testing",
    "development",
    "framework",
    "claude-code",
    "consensus",
    "verification",
    "proof",
    "evidence",
    "codecov"
  ],
  "author": {
    "name": "TruthForge Team",
    "email": "contact@truthforge.dev"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Ferymad/002-Claude-Code-Imp.git"
  },
  "bugs": {
    "url": "https://github.com/Ferymad/002-Claude-Code-Imp/issues"
  },
  "homepage": "https://github.com/Ferymad/002-Claude-Code-Imp#readme",
  "engines": {
    "node": ">=14.0.0",
    "npm": ">=6.0.0"
  },
  "dependencies": {
    "chalk": "^4.1.2",
    "commander": "^9.4.1",
    "inquirer": "^8.2.5",
    "ora": "^5.4.1"
  },
  "devDependencies": {
    "@types/jest": "^29.5.5",
    "@types/node": "^20.6.3",
    "eslint": "^8.49.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-jest": "^27.4.0",
    "eslint-plugin-security": "^1.7.1",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.0.3",
    "supertest": "^6.3.3"
  },
  "optionalDependencies": {
    "puppeteer": "^21.3.6",
    "playwright": "^1.38.1"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/**/*.test.{js,ts}",
      "!src/**/__tests__/**",
      "!src/cli/run-validation.js"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html",
      "json"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    },
    "testMatch": [
      "**/tests/**/*.test.{js,ts}",
      "**/tests/**/*.spec.{js,ts}"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ]
  },
  "eslintConfig": {
    "extends": [
      "airbnb-base",
      "plugin:jest/recommended",
      "plugin:security/recommended"
    ],
    "env": {
      "node": true,
      "jest": true,
      "es2021": true
    },
    "parserOptions": {
      "ecmaVersion": 2021,
      "sourceType": "module"
    },
    "rules": {
      "no-console": "off",
      "max-len": ["error", { "code": 120 }],
      "import/no-extraneous-dependencies": ["error", { "devDependencies": true }]
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false
  }
}
